import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Button } from './ui/button';
import { Badge } from './ui/badge';
import { Label } from './ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';
import { Progress } from './ui/progress';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';
import { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from './ui/dialog';
import { TrendingUp, TrendingDown, DollarSign, Calendar, BarChart3, LineChart, Target, Download, RefreshCw, AlertTriangle, CheckCircle, Activity, Building2, Calculator, Brain, Clock, ArrowUp, Eye, Lightbulb, Sparkles, Database, ChevronRight, BarChart2, Plane, MapPin, Package, Hotel, Car } from 'lucide-react';
// Mock data for revenue predictions
const monthlyPredictions = [
    { month: 'Jan 2024', actualRevenue: 2850000, predictedRevenue: 2900000, deals: 45, confidence: 92 },
    { month: 'Feb 2024', actualRevenue: 3200000, predictedRevenue: 3100000, deals: 52, confidence: 89 },
    { month: 'Mar 2024', actualRevenue: 2980000, predictedRevenue: 3000000, deals: 48, confidence: 91 },
    { month: 'Apr 2024', actualRevenue: 3400000, predictedRevenue: 3350000, deals: 56, confidence: 94 },
    { month: 'May 2024', actualRevenue: 3650000, predictedRevenue: 3600000, deals: 61, confidence: 88 },
    { month: 'Jun 2024', actualRevenue: 3800000, predictedRevenue: 3750000, deals: 63, confidence: 90 },
    { month: 'Jul 2024', actualRevenue: null, predictedRevenue: 4100000, deals: 68, confidence: 87 },
    { month: 'Aug 2024', actualRevenue: null, predictedRevenue: 4350000, deals: 72, confidence: 85 },
    { month: 'Sep 2024', actualRevenue: null, predictedRevenue: 4200000, deals: 70, confidence: 83 },
    { month: 'Oct 2024', actualRevenue: null, predictedRevenue: 4500000, deals: 75, confidence: 81 },
    { month: 'Nov 2024', actualRevenue: null, predictedRevenue: 4800000, deals: 80, confidence: 79 },
    { month: 'Dec 2024', actualRevenue: null, predictedRevenue: 5200000, deals: 85, confidence: 77 }
];
const yearlyPredictions = [
    { year: '2022', actualRevenue: 32500000, predictedRevenue: 32800000, deals: 580, growth: 15.2 },
    { year: '2023', actualRevenue: 38200000, predictedRevenue: 38000000, deals: 665, growth: 17.5 },
    { year: '2024', actualRevenue: null, predictedRevenue: 48500000, deals: 790, growth: 27.0 },
    { year: '2025', actualRevenue: null, predictedRevenue: 62800000, deals: 950, growth: 29.5 },
    { year: '2026', actualRevenue: null, predictedRevenue: 81200000, deals: 1150, growth: 29.3 }
];
const corporatePredictions = [
    { company: 'Global Tech Industries', currentRevenue: 2400000, predictedRevenue: 3200000, growth: 33.3, confidence: 89, deals: 12, probability: 'High' },
    { company: 'Enterprise Solutions Inc', currentRevenue: 1800000, predictedRevenue: 2600000, growth: 44.4, confidence: 92, deals: 8, probability: 'Very High' },
    { company: 'Innovation Labs Corp', currentRevenue: 1500000, predictedRevenue: 2100000, growth: 40.0, confidence: 85, deals: 6, probability: 'High' },
    { company: 'Digital Dynamics Ltd', currentRevenue: 2200000, predictedRevenue: 2800000, growth: 27.3, confidence: 87, deals: 10, probability: 'High' },
    { company: 'Business Systems Group', currentRevenue: 1200000, predictedRevenue: 1800000, growth: 50.0, confidence: 83, deals: 5, probability: 'Medium' },
    { company: 'Advanced Manufacturing Co', currentRevenue: 3000000, predictedRevenue: 3600000, growth: 20.0, confidence: 91, deals: 15, probability: 'Very High' }
];
// Generate detailed company-specific predictions
const generateCompanyPredictions = (companyName) => {
    const baseRevenue = corporatePredictions.find(c => c.company === companyName)?.currentRevenue || 2000000;
    const growthRate = corporatePredictions.find(c => c.company === companyName)?.growth || 25;
    const monthlyData = [
        { month: 'Jan 2024', actual: Math.round(baseRevenue * 0.07), predicted: Math.round(baseRevenue * 0.08), confidence: 94 },
        { month: 'Feb 2024', actual: Math.round(baseRevenue * 0.08), predicted: Math.round(baseRevenue * 0.085), confidence: 91 },
        { month: 'Mar 2024', actual: Math.round(baseRevenue * 0.075), predicted: Math.round(baseRevenue * 0.078), confidence: 89 },
        { month: 'Apr 2024', actual: Math.round(baseRevenue * 0.09), predicted: Math.round(baseRevenue * 0.092), confidence: 93 },
        { month: 'May 2024', actual: Math.round(baseRevenue * 0.095), predicted: Math.round(baseRevenue * 0.098), confidence: 87 },
        { month: 'Jun 2024', actual: Math.round(baseRevenue * 0.1), predicted: Math.round(baseRevenue * 0.102), confidence: 90 },
        { month: 'Jul 2024', actual: null, predicted: Math.round(baseRevenue * 0.11), confidence: 85 },
        { month: 'Aug 2024', actual: null, predicted: Math.round(baseRevenue * 0.115), confidence: 83 },
        { month: 'Sep 2024', actual: null, predicted: Math.round(baseRevenue * 0.12), confidence: 81 },
        { month: 'Oct 2024', actual: null, predicted: Math.round(baseRevenue * 0.125), confidence: 79 },
        { month: 'Nov 2024', actual: null, predicted: Math.round(baseRevenue * 0.13), confidence: 77 },
        { month: 'Dec 2024', actual: null, predicted: Math.round(baseRevenue * 0.135), confidence: 75 }
    ];
    const yearlyData = [
        { year: '2022', actual: Math.round(baseRevenue * 0.85), predicted: Math.round(baseRevenue * 0.87), growth: 12.5 },
        { year: '2023', actual: baseRevenue, predicted: Math.round(baseRevenue * 0.98), growth: 17.6 },
        { year: '2024', actual: null, predicted: Math.round(baseRevenue * (1 + growthRate / 100)), growth: growthRate },
        { year: '2025', actual: null, predicted: Math.round(baseRevenue * (1 + growthRate / 100) * 1.25), growth: growthRate + 5 },
        { year: '2026', actual: null, predicted: Math.round(baseRevenue * (1 + growthRate / 100) * 1.5), growth: growthRate + 3 }
    ];
    const quarterlyData = [
        { quarter: 'Q1 2024', actual: Math.round(baseRevenue * 0.23), predicted: Math.round(baseRevenue * 0.245), variance: 6.5 },
        { quarter: 'Q2 2024', actual: Math.round(baseRevenue * 0.285), predicted: Math.round(baseRevenue * 0.278), variance: -2.5 },
        { quarter: 'Q3 2024', actual: null, predicted: Math.round(baseRevenue * 0.345), variance: null },
        { quarter: 'Q4 2024', actual: null, predicted: Math.round(baseRevenue * 0.395), variance: null }
    ];
    return { monthlyData, yearlyData, quarterlyData };
};
// Business statistics data
const businessStats = {
    totalBookings: 15847,
    totalRevenue: 48500000,
    averageBookingValue: 3058,
    totalFlights: 12456,
    totalHotels: 8234,
    totalCars: 3567,
    activeClients: 1247,
    newClientsThisMonth: 89,
    bookingGrowthRate: 23.5,
    revenueGrowthRate: 27.2,
    clientRetentionRate: 87.3,
    averageLeadTime: 14.2,
    cancelationRate: 3.8,
    repeatBookingRate: 64.2,
    avgDealClosure: 28,
    topDestinations: [
        { city: 'New York', bookings: 2345, revenue: 8900000 },
        { city: 'London', bookings: 1876, revenue: 7200000 },
        { city: 'Tokyo', bookings: 1456, revenue: 6100000 },
        { city: 'Singapore', bookings: 1234, revenue: 5400000 },
        { city: 'Dubai', bookings: 1123, revenue: 4800000 }
    ],
    bookingTrends: [
        { month: 'Jan 2024', bookings: 1234, revenue: 3890000, growth: 12.3 },
        { month: 'Feb 2024', bookings: 1567, revenue: 4560000, growth: 26.9 },
        { month: 'Mar 2024', bookings: 1345, revenue: 4120000, growth: 8.9 },
        { month: 'Apr 2024', bookings: 1678, revenue: 5230000, growth: 24.7 },
        { month: 'May 2024', bookings: 1789, revenue: 5680000, growth: 33.1 },
        { month: 'Jun 2024', bookings: 1456, revenue: 4890000, growth: 18.5 }
    ]
};
const predictionModels = [
    {
        name: 'AI Neural Network',
        accuracy: 94.2,
        description: 'Deep learning model trained on historical data patterns',
        lastUpdated: '2024-07-15',
        status: 'active'
    },
    {
        name: 'Regression Analysis',
        accuracy: 89.7,
        description: 'Statistical regression with seasonal adjustments',
        lastUpdated: '2024-07-14',
        status: 'active'
    },
    {
        name: 'Time Series Forecasting',
        accuracy: 91.3,
        description: 'ARIMA model with trend and seasonality components',
        lastUpdated: '2024-07-13',
        status: 'active'
    },
    {
        name: 'Market Intelligence',
        accuracy: 87.1,
        description: 'Industry trends and market condition analysis',
        lastUpdated: '2024-07-12',
        status: 'secondary'
    }
];
const keyMetrics = {
    totalPipelineValue: 125000000,
    weightedPipelineValue: 68000000,
    averageDealSize: 850000,
    conversionRate: 23.5,
    salesCycleLength: 45,
    forecastAccuracy: 91.8,
    quarterlyGrowthRate: 28.5,
    yearOverYearGrowth: 27.0
};
const scenarioPlanning = [
    {
        scenario: 'Conservative',
        probability: 85,
        q3Revenue: 12500000,
        q4Revenue: 14200000,
        yearEndRevenue: 45800000,
        description: 'Cautious growth with market uncertainties'
    },
    {
        scenario: 'Realistic',
        probability: 70,
        q3Revenue: 13800000,
        q4Revenue: 16200000,
        yearEndRevenue: 48500000,
        description: 'Expected growth based on current trends'
    },
    {
        scenario: 'Optimistic',
        probability: 45,
        q3Revenue: 15200000,
        q4Revenue: 18800000,
        yearEndRevenue: 52600000,
        description: 'Aggressive growth with favorable conditions'
    }
];
export function RevenuePrediction({ onNavigate }) {
    const [activeTab, setActiveTab] = useState('overview');
    const [selectedTimeframe, setSelectedTimeframe] = useState('yearly');
    const [selectedModel, setSelectedModel] = useState('AI Neural Network');
    const [selectedScenario, setSelectedScenario] = useState('Realistic');
    const [showCompanyDrillDown, setShowCompanyDrillDown] = useState(false);
    const [selectedCompany, setSelectedCompany] = useState(null);
    const [companyDrillDownTab, setCompanyDrillDownTab] = useState('monthly');
    const [filters, setFilters] = useState({
        region: 'all',
        industry: 'all',
        dealSize: 'all',
        confidence: 'all'
    });
    const formatCurrency = (amount) => {
        return new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        }).format(amount);
    };
    const formatNumber = (num) => {
        return new Intl.NumberFormat('en-US').format(num);
    };
    const formatPercentage = (value) => {
        return `${value.toFixed(1)}%`;
    };
    const getConfidenceColor = (confidence) => {
        if (confidence >= 90)
            return 'text-green-600';
        if (confidence >= 80)
            return 'text-yellow-600';
        return 'text-red-600';
    };
    const getGrowthColor = (growth) => {
        if (growth >= 30)
            return 'text-green-600';
        if (growth >= 20)
            return 'text-blue-600';
        if (growth >= 10)
            return 'text-yellow-600';
        return 'text-red-600';
    };
    const getProbabilityColor = (probability) => {
        switch (probability) {
            case 'Very High': return 'bg-green-100 text-green-800';
            case 'High': return 'bg-blue-100 text-blue-800';
            case 'Medium': return 'bg-yellow-100 text-yellow-800';
            case 'Low': return 'bg-red-100 text-red-800';
            default: return 'bg-gray-100 text-gray-800';
        }
    };
    const handleViewCompany = (corporate) => {
        setSelectedCompany(corporate);
        setShowCompanyDrillDown(true);
        setCompanyDrillDownTab('monthly');
    };
    return (_jsxs("div", { className: "space-y-6 p-5", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs("h2", { className: "text-2xl font-bold flex items-center gap-2", children: [_jsx(Brain, { className: "h-6 w-6 text-blue-600" }), "Revenue Prediction Analytics"] }), _jsx("p", { className: "text-muted-foreground", children: "AI-powered revenue forecasting and sales predictions" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Button, { variant: "outline", children: [_jsx(Download, { className: "h-4 w-4 mr-2" }), "Export Report"] }), _jsxs(Button, { variant: "outline", children: [_jsx(RefreshCw, { className: "h-4 w-4 mr-2" }), "Refresh Data"] })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Total Pipeline Value" }), _jsx(Target, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatCurrency(keyMetrics.totalPipelineValue) }), _jsxs("p", { className: "text-xs text-muted-foreground", children: [_jsx("span", { className: "text-green-600", children: "+12%" }), " from last quarter"] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Forecast Accuracy" }), _jsx(Activity, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatPercentage(keyMetrics.forecastAccuracy) }), _jsxs("p", { className: "text-xs text-muted-foreground", children: [_jsx("span", { className: "text-green-600", children: "+2.3%" }), " improvement"] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "YoY Growth Rate" }), _jsx(TrendingUp, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatPercentage(keyMetrics.yearOverYearGrowth) }), _jsxs("p", { className: "text-xs text-muted-foreground", children: [_jsx("span", { className: "text-green-600", children: "Above target" }), " of 25%"] })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [_jsx(CardTitle, { className: "text-sm font-medium", children: "Average Deal Size" }), _jsx(DollarSign, { className: "h-4 w-4 text-muted-foreground" })] }), _jsxs(CardContent, { children: [_jsx("div", { className: "text-2xl font-bold", children: formatCurrency(keyMetrics.averageDealSize) }), _jsxs("p", { className: "text-xs text-muted-foreground", children: [_jsx("span", { className: "text-green-600", children: "+8%" }), " increase"] })] })] })] }), _jsxs(Tabs, { value: activeTab, onValueChange: setActiveTab, className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-5 mb-6 bg-gray-50/50 p-1 rounded-xl border border-gray-200/50", children: [_jsx(TabsTrigger, { value: "overview", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Overview" }), _jsx(TabsTrigger, { value: "monthly", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Monthly Forecast" }), _jsx(TabsTrigger, { value: "yearly", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Yearly Forecast" }), _jsx(TabsTrigger, { value: "corporate", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Corporate Analysis" }), _jsx(TabsTrigger, { value: "scenarios", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Scenario Planning" })] }), _jsxs(TabsContent, { value: "overview", className: "space-y-6", children: [_jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-5 w-5" }), "Business Performance Overview"] }), _jsx(CardDescription, { children: "Comprehensive statistics on bookings, revenue, and key business metrics" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(Package, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-2xl font-bold", children: formatNumber(businessStats.totalBookings) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Total Bookings" }), _jsxs("div", { className: "text-xs", style: { color: 'var(--color-blue-brand-600)' }, children: ["+", formatPercentage(businessStats.bookingGrowthRate), " YoY"] })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(DollarSign, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-2xl font-bold", children: formatCurrency(businessStats.totalRevenue) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Total Revenue" }), _jsxs("div", { className: "text-xs", style: { color: 'var(--color-blue-brand-600)' }, children: ["+", formatPercentage(businessStats.revenueGrowthRate), " YoY"] })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(Building2, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-2xl font-bold", children: formatNumber(businessStats.activeClients) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Active Clients" }), _jsxs("div", { className: "text-xs", style: { color: 'var(--color-blue-brand-600)' }, children: ["+", businessStats.newClientsThisMonth, " this month"] })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(Calculator, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-2xl font-bold", children: formatCurrency(businessStats.averageBookingValue) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Avg Booking Value" }), _jsx("div", { className: "text-xs", style: { color: 'var(--color-blue-brand-600)' }, children: "+15% increase" })] }) })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Plane, { className: "h-5 w-5" }), "Travel Services Breakdown"] }), _jsx(CardDescription, { children: "Distribution of bookings across different travel services" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "p-2 bg-blue-100 rounded-lg", children: _jsx(Plane, { className: "h-5 w-5 text-blue-600" }) }), _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: "Flights" }), _jsxs("div", { className: "text-sm text-muted-foreground", children: [formatNumber(businessStats.totalFlights), " bookings"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "font-bold", children: formatPercentage((businessStats.totalFlights / businessStats.totalBookings) * 100) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "of total" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "p-2 bg-green-100 rounded-lg", children: _jsx(Hotel, { className: "h-5 w-5 text-green-600" }) }), _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: "Hotels" }), _jsxs("div", { className: "text-sm text-muted-foreground", children: [formatNumber(businessStats.totalHotels), " bookings"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "font-bold", children: formatPercentage((businessStats.totalHotels / businessStats.totalBookings) * 100) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "of total" })] })] }), _jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "p-2 bg-purple-100 rounded-lg", children: _jsx(Car, { className: "h-5 w-5 text-purple-600" }) }), _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: "Car Rentals" }), _jsxs("div", { className: "text-sm text-muted-foreground", children: [formatNumber(businessStats.totalCars), " bookings"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "font-bold", children: formatPercentage((businessStats.totalCars / businessStats.totalBookings) * 100) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "of total" })] })] })] }) })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Target, { className: "h-5 w-5" }), "Key Performance Indicators"] }) }), _jsx(CardContent, { className: "space-y-4", children: _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Client Retention Rate" }), _jsx("span", { className: "font-medium", children: formatPercentage(businessStats.clientRetentionRate) })] }), _jsx(Progress, { value: businessStats.clientRetentionRate, className: "h-2" }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Repeat Booking Rate" }), _jsx("span", { className: "font-medium", children: formatPercentage(businessStats.repeatBookingRate) })] }), _jsx(Progress, { value: businessStats.repeatBookingRate, className: "h-2" }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Average Lead Time" }), _jsxs("span", { className: "font-medium", children: [businessStats.averageLeadTime, " days"] })] }), _jsx(Progress, { value: (businessStats.averageLeadTime / 30) * 100, className: "h-2" }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Deal Closure Time" }), _jsxs("span", { className: "font-medium", children: [businessStats.avgDealClosure, " days"] })] }), _jsx(Progress, { value: (businessStats.avgDealClosure / 60) * 100, className: "h-2" })] }) })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(MapPin, { className: "h-5 w-5" }), "Top Destinations"] }), _jsx(CardDescription, { children: "Most popular travel destinations by booking volume" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-3", children: businessStats.topDestinations.map((destination, index) => (_jsxs("div", { className: "flex items-center justify-between p-3 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-xs font-medium text-blue-600", children: index + 1 }) }), _jsxs("div", { children: [_jsx("div", { className: "font-medium", children: destination.city }), _jsxs("div", { className: "text-sm text-muted-foreground", children: [formatNumber(destination.bookings), " bookings"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "font-medium", children: formatCurrency(destination.revenue) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "revenue" })] })] }, destination.city))) }) })] })] }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(LineChart, { className: "h-5 w-5" }), "Monthly Booking Trends"] }), _jsx(CardDescription, { children: "Monthly performance trends showing bookings, revenue, and growth rates" })] }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: businessStats.bookingTrends.map((trend) => (_jsxs("div", { className: "flex items-center justify-between p-4 border rounded-lg", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "text-sm font-medium w-20", children: trend.month }), _jsxs("div", { className: "flex items-center gap-6", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "font-medium", children: formatNumber(trend.bookings) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "Bookings" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "font-medium", children: formatCurrency(trend.revenue) }), _jsx("div", { className: "text-xs text-muted-foreground", children: "Revenue" })] })] })] }), _jsx("div", { className: "flex items-center gap-2", children: _jsxs("div", { className: `flex items-center gap-1 ${trend.growth >= 20 ? 'text-green-600' : trend.growth >= 10 ? 'text-blue-600' : 'text-yellow-600'}`, children: [trend.growth >= 0 ? (_jsx(TrendingUp, { className: "h-4 w-4" })) : (_jsx(TrendingDown, { className: "h-4 w-4" })), _jsx("span", { className: "font-medium", children: formatPercentage(trend.growth) })] }) })] }, trend.month))) }) })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Lightbulb, { className: "h-5 w-5 text-yellow-500" }), "Key Insights"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "flex items-start gap-3", children: [_jsx(CheckCircle, { className: "h-5 w-5 text-green-500 mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Strong Q3 Performance Expected" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Revenue projected to exceed target by 12%" })] })] }), _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(TrendingUp, { className: "h-5 w-5 text-blue-500 mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Enterprise Segment Growth" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Large deals increasing average contract value" })] })] }), _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(AlertTriangle, { className: "h-5 w-5 text-yellow-500 mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "Seasonal Dip in December" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Plan for typical holiday season slowdown" })] })] }), _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(Target, { className: "h-5 w-5 text-purple-500 mt-0.5" }), _jsxs("div", { children: [_jsx("p", { className: "font-medium", children: "2025 Pipeline Building" }), _jsx("p", { className: "text-sm text-muted-foreground", children: "Early indicators show 29% growth potential" })] })] })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Database, { className: "h-5 w-5 text-blue-500" }), "Data Quality & Coverage"] }) }), _jsxs(CardContent, { className: "space-y-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Historical Sales Data" }), _jsx(Badge, { variant: "outline", children: "100% Complete" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Market Intelligence" }), _jsx(Badge, { variant: "outline", children: "Real-time" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Economic Indicators" }), _jsx(Badge, { variant: "outline", children: "Daily Updates" })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm", children: "Industry Trends" }), _jsx(Badge, { variant: "outline", children: "Weekly Sync" })] })] }), _jsxs("div", { className: "pt-3 border-t", children: [_jsxs("div", { className: "flex justify-between items-center mb-2", children: [_jsx("span", { className: "text-sm font-medium", children: "Prediction Confidence" }), _jsx("span", { className: "text-sm font-medium", children: "91.8%" })] }), _jsx(Progress, { value: 91.8, className: "h-2" }), _jsx("p", { className: "text-xs text-muted-foreground mt-2", children: "Based on 36 months of historical data and current market conditions" })] })] })] })] })] }), _jsx(TabsContent, { value: "monthly", className: "space-y-4", children: _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Calendar, { className: "h-5 w-5" }), "Monthly Revenue Predictions"] }), _jsx(CardDescription, { children: "Detailed month-by-month revenue forecasting with confidence intervals" })] }), _jsx("div", { className: "flex gap-2", children: _jsxs(Select, { value: selectedModel, onValueChange: setSelectedModel, children: [_jsx(SelectTrigger, { className: "w-48", children: _jsx(SelectValue, {}) }), _jsx(SelectContent, { children: predictionModels.map((model) => (_jsx(SelectItem, { value: model.name, children: model.name }, model.name))) })] }) })] }) }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Month" }), _jsx(TableHead, { children: "Actual Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Variance" }), _jsx(TableHead, { children: "Deals" }), _jsx(TableHead, { children: "Confidence" }), _jsx(TableHead, { children: "Trend" })] }) }), _jsx(TableBody, { children: monthlyPredictions.map((prediction) => {
                                                        const variance = prediction.actualRevenue
                                                            ? ((prediction.actualRevenue - prediction.predictedRevenue) / prediction.predictedRevenue) * 100
                                                            : null;
                                                        return (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: prediction.month }), _jsx(TableCell, { children: prediction.actualRevenue
                                                                        ? formatCurrency(prediction.actualRevenue)
                                                                        : _jsx("span", { className: "text-muted-foreground", children: "Pending" }) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(prediction.predictedRevenue) }), _jsx(TableCell, { children: variance !== null ? (_jsxs("span", { className: variance >= 0 ? 'text-green-600' : 'text-red-600', children: [variance >= 0 ? '+' : '', formatPercentage(variance)] })) : (_jsx("span", { className: "text-muted-foreground", children: "-" })) }), _jsx(TableCell, { children: prediction.deals }), _jsx(TableCell, { children: _jsx("span", { className: getConfidenceColor(prediction.confidence), children: formatPercentage(prediction.confidence) }) }), _jsx(TableCell, { children: prediction.month.includes('2024') && !prediction.actualRevenue ? (_jsxs("div", { className: "flex items-center gap-1", children: [_jsx(TrendingUp, { className: "h-4 w-4 text-green-600" }), _jsx("span", { className: "text-sm text-green-600", children: "Growing" })] })) : prediction.actualRevenue ? (_jsxs("div", { className: "flex items-center gap-1", children: [_jsx(CheckCircle, { className: "h-4 w-4 text-blue-600" }), _jsx("span", { className: "text-sm text-blue-600", children: "Actual" })] })) : (_jsxs("div", { className: "flex items-center gap-1", children: [_jsx(Clock, { className: "h-4 w-4 text-gray-400" }), _jsx("span", { className: "text-sm text-gray-400", children: "Future" })] })) })] }, prediction.month));
                                                    }) })] }) }) })] }) }), _jsx(TabsContent, { value: "yearly", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-5 w-5" }), "Yearly Revenue Forecasting"] }), _jsx(CardDescription, { children: "Long-term revenue projections with growth analysis" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsx(Card, { className: "border-2 border-blue-200 bg-blue-50", children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx("div", { className: "text-2xl font-bold text-blue-600", children: "2024" }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Current Year" }), _jsx("div", { className: "text-lg font-medium mt-2", children: formatCurrency(48500000) }), _jsx("div", { className: "text-sm text-green-600", children: "+27% growth" })] }) }), _jsx(Card, { className: "border-2 border-green-200 bg-green-50", children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx("div", { className: "text-2xl font-bold text-green-600", children: "2025" }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Next Year" }), _jsx("div", { className: "text-lg font-medium mt-2", children: formatCurrency(62800000) }), _jsx("div", { className: "text-sm text-green-600", children: "+29.5% growth" })] }) }), _jsx(Card, { className: "border-2 border-purple-200 bg-purple-50", children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx("div", { className: "text-2xl font-bold text-purple-600", children: "2026" }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Long-term" }), _jsx("div", { className: "text-lg font-medium mt-2", children: formatCurrency(81200000) }), _jsx("div", { className: "text-sm text-green-600", children: "+29.3% growth" })] }) })] }), _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Year" }), _jsx(TableHead, { children: "Actual Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Total Deals" }), _jsx(TableHead, { children: "Growth Rate" }), _jsx(TableHead, { children: "Accuracy" })] }) }), _jsx(TableBody, { children: yearlyPredictions.map((prediction) => (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: prediction.year }), _jsx(TableCell, { children: prediction.actualRevenue
                                                                            ? formatCurrency(prediction.actualRevenue)
                                                                            : _jsx("span", { className: "text-muted-foreground", children: "Projected" }) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(prediction.predictedRevenue) }), _jsx(TableCell, { children: prediction.deals }), _jsx(TableCell, { children: _jsxs("span", { className: getGrowthColor(prediction.growth), children: ["+", formatPercentage(prediction.growth)] }) }), _jsx(TableCell, { children: prediction.actualRevenue ? (_jsx(Badge, { variant: "outline", className: "text-green-600", children: "Verified" })) : (_jsx(Badge, { variant: "secondary", children: "Forecast" })) })] }, prediction.year))) })] }) })] }) })] }) }), _jsx(TabsContent, { value: "corporate", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Building2, { className: "h-5 w-5" }), "Corporate Revenue Analysis"] }), _jsx(CardDescription, { children: "Individual corporate client revenue predictions and growth opportunities" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsxs("div", { children: [_jsx(Label, { children: "Region Filter" }), _jsxs(Select, { value: filters.region, onValueChange: (value) => setFilters({ ...filters, region: value }), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Regions" }), _jsx(SelectItem, { value: "north-america", children: "North America" }), _jsx(SelectItem, { value: "europe", children: "Europe" }), _jsx(SelectItem, { value: "asia-pacific", children: "Asia Pacific" })] })] })] }), _jsxs("div", { children: [_jsx(Label, { children: "Industry Filter" }), _jsxs(Select, { value: filters.industry, onValueChange: (value) => setFilters({ ...filters, industry: value }), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Industries" }), _jsx(SelectItem, { value: "technology", children: "Technology" }), _jsx(SelectItem, { value: "manufacturing", children: "Manufacturing" }), _jsx(SelectItem, { value: "finance", children: "Finance" }), _jsx(SelectItem, { value: "healthcare", children: "Healthcare" })] })] })] }), _jsxs("div", { children: [_jsx(Label, { children: "Deal Size" }), _jsxs(Select, { value: filters.dealSize, onValueChange: (value) => setFilters({ ...filters, dealSize: value }), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Sizes" }), _jsx(SelectItem, { value: "enterprise", children: "Enterprise (>$1M)" }), _jsx(SelectItem, { value: "mid-market", children: "Mid-Market ($100K-$1M)" }), _jsx(SelectItem, { value: "small", children: "Small (<$100K)" })] })] })] }), _jsxs("div", { children: [_jsx(Label, { children: "Confidence Level" }), _jsxs(Select, { value: filters.confidence, onValueChange: (value) => setFilters({ ...filters, confidence: value }), children: [_jsx(SelectTrigger, { children: _jsx(SelectValue, {}) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: "all", children: "All Levels" }), _jsx(SelectItem, { value: "high", children: "High (>90%)" }), _jsx(SelectItem, { value: "medium", children: "Medium (70-90%)" }), _jsx(SelectItem, { value: "low", children: "Low (<70%)" })] })] })] })] }), _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Company" }), _jsx(TableHead, { children: "Current Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Growth" }), _jsx(TableHead, { children: "Confidence" }), _jsx(TableHead, { children: "Active Deals" }), _jsx(TableHead, { children: "Probability" }), _jsx(TableHead, { children: "Actions" })] }) }), _jsx(TableBody, { children: corporatePredictions.map((corporate) => (_jsxs(TableRow, { children: [_jsx(TableCell, { children: _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Building2, { className: "h-4 w-4 text-muted-foreground" }), _jsx("span", { className: "font-medium", children: corporate.company })] }) }), _jsx(TableCell, { children: formatCurrency(corporate.currentRevenue) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(corporate.predictedRevenue) }), _jsx(TableCell, { children: _jsxs("div", { className: "flex items-center gap-1", children: [_jsx(ArrowUp, { className: "h-4 w-4 text-green-600" }), _jsxs("span", { className: "text-green-600", children: ["+", formatPercentage(corporate.growth)] })] }) }), _jsx(TableCell, { children: _jsx("span", { className: getConfidenceColor(corporate.confidence), children: formatPercentage(corporate.confidence) }) }), _jsx(TableCell, { children: corporate.deals }), _jsx(TableCell, { children: _jsx(Badge, { className: getProbabilityColor(corporate.probability), children: corporate.probability }) }), _jsx(TableCell, { children: _jsxs(Button, { size: "sm", variant: "outline", onClick: () => handleViewCompany(corporate), children: [_jsx(Eye, { className: "h-4 w-4 mr-1" }), "View"] }) })] }, corporate.company))) })] }) })] }) })] }) }), _jsx(TabsContent, { value: "scenarios", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Sparkles, { className: "h-5 w-5" }), "Scenario Planning & Analysis"] }), _jsx(CardDescription, { children: "Multiple revenue scenarios based on different market conditions and assumptions" })] }), _jsx(CardContent, { children: _jsxs("div", { className: "space-y-6", children: [_jsx("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: scenarioPlanning.map((scenario) => (_jsx(Card, { className: `cursor-pointer transition-all ${selectedScenario === scenario.scenario
                                                        ? 'border-2 border-blue-500 bg-blue-50'
                                                        : 'border hover:border-gray-300'}`, onClick: () => setSelectedScenario(scenario.scenario), children: _jsxs(CardContent, { className: "p-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsx("h3", { className: "font-medium", children: scenario.scenario }), _jsx(Badge, { variant: "outline", children: formatPercentage(scenario.probability) })] }), _jsx("p", { className: "text-sm text-muted-foreground mb-4", children: scenario.description }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Q3 Revenue:" }), _jsx("span", { className: "font-medium", children: formatCurrency(scenario.q3Revenue) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { children: "Q4 Revenue:" }), _jsx("span", { className: "font-medium", children: formatCurrency(scenario.q4Revenue) })] }), _jsxs("div", { className: "flex justify-between text-sm border-t pt-2", children: [_jsx("span", { children: "Year-End Total:" }), _jsx("span", { className: "font-bold", children: formatCurrency(scenario.yearEndRevenue) })] })] })] }) }, scenario.scenario))) }), _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsx(CardTitle, { children: "Scenario Impact Analysis" }), _jsxs(CardDescription, { children: ["Detailed breakdown of the selected scenario: ", selectedScenario] })] }), _jsx(CardContent, { children: _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-6", children: [_jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "font-medium", children: "Key Assumptions" }), selectedScenario === 'Conservative' && (_jsxs("ul", { className: "space-y-2 text-sm text-muted-foreground", children: [_jsx("li", { children: "\u2022 Market uncertainties affect deal closure rates" }), _jsx("li", { children: "\u2022 15% slower sales cycle due to economic conditions" }), _jsx("li", { children: "\u2022 Average deal size remains stable" }), _jsx("li", { children: "\u2022 Conservative expansion in new markets" })] })), selectedScenario === 'Realistic' && (_jsxs("ul", { className: "space-y-2 text-sm text-muted-foreground", children: [_jsx("li", { children: "\u2022 Current market trends continue" }), _jsx("li", { children: "\u2022 Normal seasonal variations apply" }), _jsx("li", { children: "\u2022 Expected customer acquisition rate" }), _jsx("li", { children: "\u2022 Steady expansion into new verticals" })] })), selectedScenario === 'Optimistic' && (_jsxs("ul", { className: "space-y-2 text-sm text-muted-foreground", children: [_jsx("li", { children: "\u2022 Favorable market conditions accelerate growth" }), _jsx("li", { children: "\u2022 Successful product launches drive revenue" }), _jsx("li", { children: "\u2022 Higher than expected deal closure rates" }), _jsx("li", { children: "\u2022 Aggressive market expansion succeeds" })] }))] }), _jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "font-medium", children: "Risk Factors" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm", children: "Market Risk" }), _jsx(Badge, { variant: selectedScenario === 'Conservative' ? 'destructive' : selectedScenario === 'Realistic' ? 'secondary' : 'outline', children: selectedScenario === 'Conservative' ? 'High' : selectedScenario === 'Realistic' ? 'Medium' : 'Low' })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm", children: "Competition Risk" }), _jsx(Badge, { variant: selectedScenario === 'Optimistic' ? 'destructive' : 'secondary', children: selectedScenario === 'Optimistic' ? 'High' : 'Medium' })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm", children: "Execution Risk" }), _jsx(Badge, { variant: selectedScenario === 'Optimistic' ? 'destructive' : selectedScenario === 'Realistic' ? 'secondary' : 'outline', children: selectedScenario === 'Optimistic' ? 'High' : selectedScenario === 'Realistic' ? 'Medium' : 'Low' })] })] })] })] }) })] })] }) })] }) })] }), _jsx(Dialog, { open: showCompanyDrillDown, onOpenChange: setShowCompanyDrillDown, children: _jsxs(DialogContent, { className: "w-[1104px] max-w-[1104px] max-h-[90vh] overflow-y-auto p-6 sm:w-[95vw] sm:max-w-[95vw] md:w-[1104px] md:max-w-[1104px]", children: [_jsxs(DialogHeader, { children: [_jsxs(DialogTitle, { className: "flex items-center gap-2", children: [_jsx(Building2, { className: "h-5 w-5 text-blue-600" }), "Revenue Prediction: ", selectedCompany?.company] }), _jsxs(DialogDescription, { children: ["Detailed revenue forecasting and growth analysis for ", selectedCompany?.company] })] }), selectedCompany && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-4 gap-4", children: [_jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(DollarSign, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-lg font-bold", children: formatCurrency(selectedCompany.currentRevenue) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Current Revenue" })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(TrendingUp, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-lg font-bold", children: formatCurrency(selectedCompany.predictedRevenue) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Predicted Revenue" })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(ArrowUp, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsxs("div", { className: "text-lg font-bold", children: ["+", formatPercentage(selectedCompany.growth)] }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Growth Rate" })] }) }), _jsx(Card, { className: "border-2", style: { borderColor: 'var(--color-blue-brand-200)', backgroundColor: 'var(--color-blue-brand-50)' }, children: _jsxs(CardContent, { className: "p-4 text-center", children: [_jsx(Target, { className: "h-6 w-6 mx-auto mb-2", style: { color: 'var(--color-blue-brand-600)' } }), _jsx("div", { className: "text-lg font-bold", children: formatPercentage(selectedCompany.confidence) }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Confidence Level" })] }) })] }), _jsxs(Tabs, { value: companyDrillDownTab, onValueChange: setCompanyDrillDownTab, className: "w-full", children: [_jsxs(TabsList, { className: "grid w-full grid-cols-3 mb-6 bg-gray-50/50 p-1 rounded-xl border border-gray-200/50", children: [_jsx(TabsTrigger, { value: "monthly", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Monthly Breakdown" }), _jsx(TabsTrigger, { value: "yearly", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Yearly Projections" }), _jsx(TabsTrigger, { value: "quarterly", className: "rounded-lg px-6 py-3 data-[state=active]:bg-white data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-[#FD9646] data-[state=active]:border-b-[#FD9646] font-medium text-gray-600 data-[state=active]:text-gray-900 hover:text-gray-900 transition-all duration-200", children: "Quarterly Analysis" })] }), _jsx(TabsContent, { value: "monthly", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Calendar, { className: "h-5 w-5" }), "Monthly Revenue Predictions for ", selectedCompany.company] }), _jsx(CardDescription, { children: "Detailed month-by-month revenue forecasting with confidence intervals" })] }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Month" }), _jsx(TableHead, { children: "Actual Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Variance" }), _jsx(TableHead, { children: "Confidence" }), _jsx(TableHead, { children: "Status" })] }) }), _jsx(TableBody, { children: generateCompanyPredictions(selectedCompany.company).monthlyData.map((data) => {
                                                                            const variance = data.actual
                                                                                ? ((data.actual - data.predicted) / data.predicted) * 100
                                                                                : null;
                                                                            return (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: data.month }), _jsx(TableCell, { children: data.actual
                                                                                            ? formatCurrency(data.actual)
                                                                                            : _jsx("span", { className: "text-muted-foreground", children: "Pending" }) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(data.predicted) }), _jsx(TableCell, { children: variance !== null ? (_jsxs("span", { className: variance >= 0 ? 'text-green-600' : 'text-red-600', children: [variance >= 0 ? '+' : '', formatPercentage(variance)] })) : (_jsx("span", { className: "text-muted-foreground", children: "-" })) }), _jsx(TableCell, { children: _jsx("span", { className: getConfidenceColor(data.confidence), children: formatPercentage(data.confidence) }) }), _jsx(TableCell, { children: data.actual ? (_jsxs(Badge, { variant: "outline", className: "text-blue-600", children: [_jsx(CheckCircle, { className: "h-3 w-3 mr-1" }), "Actual"] })) : (_jsxs(Badge, { variant: "secondary", children: [_jsx(Clock, { className: "h-3 w-3 mr-1" }), "Forecast"] })) })] }, data.month));
                                                                        }) })] }) }) })] }) }), _jsx(TabsContent, { value: "yearly", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(BarChart3, { className: "h-5 w-5" }), "Yearly Revenue Projections for ", selectedCompany.company] }), _jsx(CardDescription, { children: "Long-term revenue forecasting with growth trajectory analysis" })] }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Year" }), _jsx(TableHead, { children: "Actual Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Growth Rate" }), _jsx(TableHead, { children: "Revenue Change" }), _jsx(TableHead, { children: "Status" })] }) }), _jsx(TableBody, { children: generateCompanyPredictions(selectedCompany.company).yearlyData.map((data) => {
                                                                            const changeFromPrevious = data.actual || data.predicted;
                                                                            return (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: data.year }), _jsx(TableCell, { children: data.actual
                                                                                            ? formatCurrency(data.actual)
                                                                                            : _jsx("span", { className: "text-muted-foreground", children: "Projected" }) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(data.predicted) }), _jsx(TableCell, { children: _jsxs("span", { className: getGrowthColor(data.growth), children: ["+", formatPercentage(data.growth)] }) }), _jsx(TableCell, { children: _jsxs("div", { className: "flex items-center gap-1", children: [_jsx(ArrowUp, { className: "h-4 w-4 text-green-600" }), _jsxs("span", { className: "text-green-600", children: ["+", formatCurrency((data.predicted || data.actual || 0) * (data.growth / 100))] })] }) }), _jsx(TableCell, { children: data.actual ? (_jsxs(Badge, { variant: "outline", className: "text-green-600", children: [_jsx(CheckCircle, { className: "h-3 w-3 mr-1" }), "Verified"] })) : (_jsxs(Badge, { variant: "secondary", children: [_jsx(Clock, { className: "h-3 w-3 mr-1" }), "Forecast"] })) })] }, data.year));
                                                                        }) })] }) }) })] }) }), _jsx(TabsContent, { value: "quarterly", className: "space-y-4", children: _jsxs(Card, { children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(BarChart2, { className: "h-5 w-5" }), "Quarterly Performance Analysis for ", selectedCompany.company] }), _jsx(CardDescription, { children: "Quarterly revenue breakdown with variance analysis" })] }), _jsx(CardContent, { children: _jsx("div", { className: "overflow-x-auto", children: _jsxs(Table, { children: [_jsx(TableHeader, { children: _jsxs(TableRow, { children: [_jsx(TableHead, { children: "Quarter" }), _jsx(TableHead, { children: "Actual Revenue" }), _jsx(TableHead, { children: "Predicted Revenue" }), _jsx(TableHead, { children: "Variance" }), _jsx(TableHead, { children: "Performance" }), _jsx(TableHead, { children: "Trend" })] }) }), _jsx(TableBody, { children: generateCompanyPredictions(selectedCompany.company).quarterlyData.map((data) => (_jsxs(TableRow, { children: [_jsx(TableCell, { className: "font-medium", children: data.quarter }), _jsx(TableCell, { children: data.actual
                                                                                        ? formatCurrency(data.actual)
                                                                                        : _jsx("span", { className: "text-muted-foreground", children: "Pending" }) }), _jsx(TableCell, { className: "font-medium", children: formatCurrency(data.predicted) }), _jsx(TableCell, { children: data.variance !== null ? (_jsxs("span", { className: data.variance >= 0 ? 'text-green-600' : 'text-red-600', children: [data.variance >= 0 ? '+' : '', formatPercentage(data.variance)] })) : (_jsx("span", { className: "text-muted-foreground", children: "-" })) }), _jsx(TableCell, { children: data.variance !== null ? (data.variance >= 0 ? (_jsxs(Badge, { className: "bg-green-100 text-green-800", children: [_jsx(TrendingUp, { className: "h-3 w-3 mr-1" }), "Above Target"] })) : (_jsxs(Badge, { className: "bg-red-100 text-red-800", children: [_jsx(TrendingDown, { className: "h-3 w-3 mr-1" }), "Below Target"] }))) : (_jsxs(Badge, { variant: "secondary", children: [_jsx(Clock, { className: "h-3 w-3 mr-1" }), "Upcoming"] })) }), _jsx(TableCell, { children: _jsxs("div", { className: "flex items-center gap-1", children: [_jsx(TrendingUp, { className: "h-4 w-4 text-green-600" }), _jsx("span", { className: "text-sm text-green-600", children: "Growing" })] }) })] }, data.quarter))) })] }) }) })] }) })] })] })), _jsxs(DialogFooter, { children: [_jsx(Button, { variant: "outline", onClick: () => setShowCompanyDrillDown(false), children: "Close" }), _jsxs(Button, { onClick: () => {
                                        setShowCompanyDrillDown(false);
                                        onNavigate('corporate-search', { company: selectedCompany?.company });
                                    }, children: [_jsx(ChevronRight, { className: "h-4 w-4 mr-2" }), "View Full Profile"] })] })] }) })] }));
}
